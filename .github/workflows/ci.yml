name: CI
on:
  pull_request:
  push:
    branches: "some-rando-branch" # '**' To change when ready for error barrage
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  check-and-test:
    name: Check, lint, test (stable)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Format
        run: cargo fmt --all --check
      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Install nextest
        uses: taiki-e/install-action@v2
        with: { tool: nextest }
      - name: Test (nextest)
        run: cargo nextest run --workspace --all-features

  docs:
    name: Docs (warns are errors)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build docs
        env: { RUSTDOCFLAGS: "-D rustdoc::all" }
        run: cargo doc --workspace --all-features --no-deps

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo build --workspace --all-features

  minimal-versions:
    name: Minimal versions build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/install-action@v2
        with: { tool: cargo-hack }
      - uses: Swatinem/rust-cache@v2
      - run: cargo generate-lockfile -Z minimal-versions || true
      - run: cargo hack build --workspace --all-features --ignore-private --no-dev-deps

  security:
    name: Security & licensing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
      - uses: actions-rust-lang/audit@v1
        with:
          denyWarnings: true
        continue-on-error: true

  semver:
    name: SemVer checks (pre-publish)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: obi1kenobi/cargo-semver-checks-action@v2
