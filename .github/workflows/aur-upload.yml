name: Publish to AUR

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 0.2.9)'
        required: true
      increment_pkgrel:
        description: 'Increment pkgrel (for same version updates)'
        required: false
        default: false
        type: boolean

jobs:
  update-aur:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux tarballs from release
        shell: bash
        run: |
          set -euo pipefail
          tag="v${{ inputs.version_name }}"
          mkdir -p downloads
          wget -O downloads/yadaw-${{ inputs.version_name }}-x86_64-unknown-linux-gnu.tar.gz \
            "https://github.com/mlm-games/yadaw/releases/download/${tag}/yadaw-${{ inputs.version_name }}-x86_64-unknown-linux-gnu.tar.gz"
          wget -O downloads/yadaw-${{ inputs.version_name }}-aarch64-unknown-linux-gnu.tar.gz \
            "https://github.com/mlm-games/yadaw/releases/download/${tag}/yadaw-${{ inputs.version_name }}-aarch64-unknown-linux-gnu.tar.gz"

      - name: Calculate SHA256 checksums
        id: checksums
        shell: bash
        run: |
          set -euo pipefail
          X64_TARBALL="downloads/yadaw-${{ inputs.version_name }}-x86_64-unknown-linux-gnu.tar.gz"
          ARM64_TARBALL="downloads/yadaw-${{ inputs.version_name }}-aarch64-unknown-linux-gnu.tar.gz"
          X64_HASH=$(sha256sum "$X64_TARBALL" | cut -d ' ' -f 1)
          ARM64_HASH=$(sha256sum "$ARM64_TARBALL" | cut -d ' ' -f 1)
          echo "x64_hash=$X64_HASH"   >> "$GITHUB_OUTPUT"
          echo "arm64_hash=$ARM64_HASH" >> "$GITHUB_OUTPUT"

      - name: Get current pkgrel from AUR
        id: current_pkgrel
        shell: bash
        run: |
          set -euo pipefail
          CURRENT_PKGREL=$(curl -s "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yadaw-bin" | grep "^pkgrel=" | cut -d= -f2 || echo "0")
          echo "current_pkgrel=$CURRENT_PKGREL" >> "$GITHUB_OUTPUT"
        continue-on-error: true

      - name: Determine pkgrel
        id: pkgrel
        shell: bash
        run: |
          if [[ "${{ inputs.increment_pkgrel }}" == "true" ]]; then
            CURRENT=${{ steps.current_pkgrel.outputs.current_pkgrel }}
            NEW_PKGREL=$((CURRENT + 1))
            echo "pkgrel=$NEW_PKGREL" >> "$GITHUB_OUTPUT"
          else
            echo "pkgrel=1" >> "$GITHUB_OUTPUT"
          fi

      - name: Create PKGBUILD
        shell: bash
        run: |
          ver="${{ inputs.version_name }}"
          tag="v${{ inputs.version_name }}"
          mkdir -p aur-package
          cat > aur-package/PKGBUILD <<'EOF'
          # Maintainer: MLM-stuff <gfxoxinzh@mozmail.com>
          pkgname=yadaw-bin
          _pkgname=yadaw
          pkgver={{VER}}
          pkgrel={{PKGREL}}
          pkgdesc="Yet Another mini-DAW - a lightweight sfx tool in pure Rust (binary)"
          arch=('x86_64' 'aarch64')
          url="https://github.com/mlm-games/yadaw"
          license=('GPL3')
          depends=('alsa-lib' 'lilv' 'suil' 'sratom' 'libx11' 'libxcursor' 'libxinerama' 'libxrandr' 'libxi')
          optdepends=(
            'pipewire-pulse: for PipeWire audio support'
            'pulseaudio: for PulseAudio audio support'
          )
          provides=('yadaw')
          conflicts=('yadaw')
          options=('!strip')

          source_x86_64=("${_pkgname}-${pkgver}-x86_64-unknown-linux-gnu.tar.gz::https://github.com/mlm-games/yadaw/releases/download/v${pkgver}/${_pkgname}-${pkgver}-x86_64-unknown-linux-gnu.tar.gz")
          source_aarch64=("${_pkgname}-${pkgver}-aarch64-unknown-linux-gnu.tar.gz::https://github.com/mlm-games/yadaw/releases/download/v${pkgver}/${_pkgname}-${pkgver}-aarch64-unknown-linux-gnu.tar.gz")
          # Icon
          source=("icon.png::https://raw.githubusercontent.com/mlm-games/yadaw/refs/heads/master/src/experiments/icon.png")

          sha256sums_x86_64=('{{X64_HASH}}')
          sha256sums_aarch64=('{{ARM64_HASH}}')
          sha256sums=('SKIP') # for icon.png

          package() {
            local target
            if [[ "$CARCH" == "x86_64" ]]; then
              target="x86_64-unknown-linux-gnu"
            else
              target="aarch64-unknown-linux-gnu"
            fi

            local dir="${srcdir}/${_pkgname}-${pkgver}-${target}"
            install -Dm755 "${dir}/${_pkgname}" "${pkgdir}/usr/bin/${_pkgname}"

            install -Dm644 /dev/stdin "${pkgdir}/usr/share/applications/${_pkgname}.desktop" << DESKTOP_EOF
          [Desktop Entry]
          Name=YADAW
          Comment=A Sfx creation tool (maybe a little more than that)
          Exec=${_pkgname}
          Icon=${_pkgname}
          Terminal=false
          Type=Application
          Categories=AudioVideo;Audio;
          StartupNotify=true
          DESKTOP_EOF

            # Icon
            install -Dm644 "${srcdir}/icon.png" "${pkgdir}/usr/share/pixmaps/${_pkgname}.png"
          }
          EOF

          # Inject values
          sed -i "s/{{VER}}/${ver}/g" aur-package/PKGBUILD
          sed -i "s/{{PKGREL}}/${{ steps.pkgrel.outputs.pkgrel }}/g" aur-package/PKGBUILD
          sed -i "s/{{X64_HASH}}/${{ steps.checksums.outputs.x64_hash }}/g" aur-package/PKGBUILD
          sed -i "s/{{ARM64_HASH}}/${{ steps.checksums.outputs.arm64_hash }}/g" aur-package/PKGBUILD

      - name: Publish to AUR
        uses: KSXGitHub/github-actions-deploy-aur@master
        with:
          pkgname: yadaw-bin
          pkgbuild: aur-package/PKGBUILD
          commit_username: MLM-stuff
          commit_email: gfxoxinzh@mozmail.com
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: "Update to v${{ inputs.version_name }}-${{ steps.pkgrel.outputs.pkgrel }}"
